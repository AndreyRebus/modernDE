services:
  controller:
    image: 'trinodb/trino'
    hostname: trino
    volumes:
      - ./etc/catalog:/etc/trino/catalog
      - ./etc/config.properties:/etc/trino/config.properties
      - ./etc/password-authenticator.properties:/etc/trino/password-authenticator.properties
      - ./etc/password.db:/etc/trino/password.db
      - ./etc/keystore.p12:/etc/trino/keystore.p12
    ports:
      - "8443:8443"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - trino_network

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always
    networks:
      - trino_network

  bot:
    build:
      context: .
      dockerfile: Dockerfile.deps      # твой Dockerfile из сообщения
    image: bot-deps                    # тег, если хочешь переиспользовать
    container_name: bot
    working_dir: /app
    env_file: .env
    # при желании зафиксируй директорию для графиков:
    environment:
      - IMAGE_DIR=bot/data/image
    command: >
      bash -lc "python -m bot.prefetch &&
                python -m bot.kda_charts &&
                exec python -m bot.bot"
    volumes:
      - ./bot:/app/bot
      - ./data:/app/data
      - ./bot/data/splashes:/app/data/splashes:ro
    depends_on:
      - controller
    restart: unless-stopped
    networks:
      - trino_network

networks:
  trino_network:
    driver: bridge

volumes:
  postgres-db-volume:
  airflow-logs:
