from aiogram.filters import Command
from aiogram import Router

from .cache import fetch_and_cache, load_data
from .messages import build_messages
from .dialogs import USER_MESSAGES, RecSG
from .config import logger

router = Router()

@router.message(Command("refresh"))
async def cmd_refresh(m):
    await m.answer("üîÑ –û–±–Ω–æ–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ‚Ä¶")
    try:
        fetch_and_cache()
        await m.answer("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        await m.answer(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")

@router.message(Command("check"))
async def cmd_check(m, dialog_manager):
    try:
        df = load_data()
        msgs = build_messages(df)
    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∫–∏")
        await m.answer(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∫–∏: {e}")
        return

    USER_MESSAGES[m.from_user.id] = msgs
    await dialog_manager.start(RecSG.show, data={"idx": 0})