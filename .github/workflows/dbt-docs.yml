name: Build & Publish dbt Docs (offline, verified)

on:
  push:
    branches: [ "alternative_main" ]
    paths:
      - "lol_dbt_project/**"
      - ".github/workflows/dbt-docs.yml"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  docs:
    name: Generate dbt docs (offline)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      DBT_PROFILES_DIR: /home/runner/.dbt
      PIP_DISABLE_PIP_VERSION_CHECK: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Create requirements file
        run: |
          cat > requirements-dbt.txt <<'REQ'
          dbt-core==1.8.1
          dbt-trino==1.8.1
          REQ

      - name: Setup Python (cache pip)
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: "requirements-dbt.txt"

      - name: Install dbt
        run: pip install -r requirements-dbt.txt -q

      - name: Write profiles.yml
        run: |
          mkdir -p "$DBT_PROFILES_DIR"
          cat > "$DBT_PROFILES_DIR/profiles.yml" <<'YAML'
          lol_dbt_project:
            target: dev
            outputs:
              dev:
                type: trino
                method: ldap
                host: "{{ env_var('TRINO_HOST', 'example.invalid') }}"
                port: "{{ env_var('TRINO_PORT', 8443) | as_number }}"
                user: "{{ env_var('TRINO_USER', 'dummy') }}"
                password: "{{ env_var('TRINO_PASSWORD', 'dummy') }}"
                http_scheme: https
                verify: false
                database: "{{ env_var('TRINO_CATALOG', 'dummy') }}"
                schema: "{{ env_var('DBT_SCHEMA', 'dummy') }}"
                threads: "{{ env_var('DBT_THREADS', 1) | as_number }}"
          YAML

      - name: dbt parse (no connection)
        working-directory: lol_dbt_project
        env: { DBT_PROJECT_DIR: "" }
        run: dbt --no-use-colors parse --profiles-dir "$DBT_PROFILES_DIR"

      - name: dbt docs generate (offline single-file)
        working-directory: lol_dbt_project
        env: { DBT_PROJECT_DIR: "" }
        run: |
          dbt --no-use-colors docs generate \
            --no-compile --empty-catalog --static \
            --profiles-dir "$DBT_PROFILES_DIR"
          # Гарантируем index.html в корне target
          mv -f target/static_index.html target/index.html
          # Отключаем Jekyll, на всякий случай
          touch target/.nojekyll
          # Диагностика
          ls -lah target
          test -f target/index.html || (echo "❌ index.html не создан" && exit 1)

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact (target/)
        uses: actions/upload-pages-artifact@v3
        with:
          path: lol_dbt_project/target

  deploy:
    name: Deploy to GitHub Pages
    needs: docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post URL to Job Summary
        run: |
          echo "### ✅ Published dbt docs" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "Open: **${{ steps.deployment.outputs.page_url }}**" >> "$GITHUB_STEP_SUMMARY"
